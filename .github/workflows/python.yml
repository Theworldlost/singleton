name: main
on: [pull_request, push]
jobs:
  pre-process:
    name: Pre process
    runs-on: ubuntu-latest
    outputs:
      were-only-docs-updated: ${{ steps.were-only-docs-updated-action.outputs.were-only-docs-updated }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2.  
      - name: Get commit range
        id: get-commit-range-action
        uses: ./.github/actions/get-commit-range-action
      - name: Were only docs updated
        id: were-only-docs-updated-action
        uses: ./.github/actions/were-only-docs-updated-action
        with:
          commit-range: ${{ steps.get-commit-range-action.outputs.commit-range }}
  check-header:
    name: Check Header
    runs-on: ubuntu-latest
    needs: pre-process
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2.  
      - name: Get commit range
        id: get-commit-range-action
        uses: ./.github/actions/get-commit-range-action
      - name: Check header
        run: |
          git clone --branch=devops https://github.com/vmware/singleton.git devops
          cp $GITHUB_WORKSPACE/devops/check_headers.py .
          chmod +x check_headers.py
          git diff ${{ steps.get-commit-range-action.outputs.commit-range }} --stat
          git diff --name-only --diff-filter=d ${{ steps.get-commit-range-action.outputs.commit-range }}
          python ./check_headers.py -f "$(git diff --name-only --diff-filter=d ${{ steps.get-commit-range-action.outputs.commit-range }})"
  unit-test:
      runs-on: ubuntu-latest
      needs: pre-process
      if: needs.pre-process.outputs.were-only-docs-updated != 'yes'
      strategy: 
        matrix:
          python-version: [ '2.7', '3.5', '3.7' ]
      name: Python ${{ matrix.python-version }} sample
      steps: 
        - name: checkout code
          uses: actions/checkout@v2
        - name: Set up JDK 2.7 3.5 3.7
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
            architecture: x64
        - name: Unit test
          run: |
            cd sgtn4python/test
            pip install requests coverage==4.5 pyyaml
            str=$(printf '=%.0s' {1..50})
            coverage run --source='.' -m unittest discover
            pip list | grep coverage
            coverage report -m
            coverage xml -i           
        - name: Upload Codecov report for coverage.xml
          uses: codecov/codecov-action@v2
          with:
            files: ./sgtn4python/test
            flags: coverage.xml
  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: pre-process
    strategy: 
          matrix:
            python-version: [ '3.7', '3.5', '2.7' ]
    if: needs.pre-process.outputs.were-only-docs-updated != 'yes'
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up python 2.7 3.5 3.7
        uses: actions/setup-python@v2
        with:
           python-version: ${{ matrix.python-version }}
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
  
      
            
            
         
  
            
